NAME
 MID - Multiple Interface Downloader

SYNOPSIS
 {MID | mid} {--url | -u}  URL [OPTIONS]

DESCRIPTION
 MID is a HTTP[S] download accelarator. MID tries to send HTTP range requests through multiple network-interfaces to boost the download speed.
 MID unit (downloading unit) requests a specific part of the file and replicate it locally on the disk. MID units work in parallel to complete the download

 MID supports HTTP and HTTPS protocols.

OPTIONS
 --url argument is mandatory. URL should be a valid HTTP[S] url
 
 Other options:

   --output-file file                     -o file               Specify the output file, if not specified MID will automatically detect from the URL.
   --interfaces nic1,nic2...              -i nic1,nic2...       Network-interfaces which are used in the file download.
   --exclude-interfaces nic1,nic2...      -ni nic1,nic2...      Network-interfaces which are excluded from the file download.
   --help                                 -h                    Print the help message and exit.
   --url URL                              -u URL                URL to be used in the download.
   --unprocessed-file file                -up file              Use this .up file instead of determining from the URL. 
   --scheduler-algorithm alg              -sa alg               Use alg scheduler algorithm (case insensitive). alg => MAXOUT, ALL. (see the SCHEDULER ALOGORITHM section).
   --max-parallel-downloads x             -n x                  At max x parallel connections are opened.
   --max-unit-retries x                   -ur x                 At max x retries are made by a unit to download a chunk. If failed the download is terminated.
   --unit-break Nu                        -ub Nu                Chunk size limit to split the unit further, default is 100K.
                                                                u => {' ',B,b}=*1, K=*1024, k=*1000, M=K*1024, m=k*1000, G=M*1024, g=m*1000
   --max-redirects x                      -R x                  At max x HTTP redirects are followed.
   --max-tcp-syn-retransmits x            -sr x                 At max x TCP SYNs are retransmitted, when intiating a TCP connection.
   --unit-sleep-time t                    -us t                 Download unit sleeps for t seconds before retrying.
   --io-timeout t                         -io t                 Set connect and I/O timeout of t seconds.
   --ipv4                                 -4                    Use IPv4 address scheme.
   --ip6                                  -6                    Use IPv6 address scheme.
   --progress-update-time t               -pu t                 Progress information updates after evert t seconds.
   --detailed-progress                    -dp                   Show detailed download progress.
   --force-resume                         -fr                   Skip the checks and start the download.
   --no-resume                            -nr                   Do not resume the partial downloads. Default action is to resume.
   --detailed-save                        -ds                   Save the hashes of downloaded ranges to .ms file. Default action is not to save. (SSL support required).
   --entry-number x                       -e x                  If multiple partial downloads exists, select the x-th download.
   --ms-file file                         -ms file              Use this .ms file instead of determining from the URL.
   --print-ms file                        -pm file              Print the MID state information and exit.
   --delete-ms file                       -dm file              Delete ms entry, entry number should be specified with option -e.
   --validate-ms file                     -vm file              Validate ms entry, entry number should be specified with option -e.
   --version                              -V                    Print the version and exit.
   --header h=v                           -H h=v                Add custom headers to HTTP request message (option can be used multiple times to add multiple headers).
   --quiet                                -q                    Silent mode, don't output anything.
   --verbose                              -v                    Print the verbose information.
   --vverbose                             -vv                   Print the very verbose information.
   --surpass-root-check                   -s                    If had the sufficient permissions, use -s to surpass the root-check. (See the NOTE).
   --conf file                            -c file               Specify the configuration file path. Preference order: cmd_line > conf_file > default_values

SCHEDULER ALGORITHM
 Scheduler algorithm takes the responsibility of scheduling the download. It decides when to open a new connection and which network-interface to use.
 The MID scheduler algorithms are MAXOUT and ALL (case insensitive); They can be selected using --scheduler-algorithm option. Scheduler takes decesions based 
 on the connection parameters (max_speed, current_speed, max_connections, current_connections). Below each alogrithm is explained in breif, to let the user decide 
 which one to use.
 
 MAXOUT
  MAXOUT operates within the boundaries of --max-parallel-downloads. It is guranteed that MAXOUT wont open more connections than the specified value.
  MAXOUT aims to maxout the interface utilization by increasing one connection at a time before moving to the next interface. It does a timely check to make 
  sure that the interface is utilized to the full extent, if there is a drop in speed by the threshold_value, a new connection is triggered (within the limits
  of --max-parallel-downloads). So a MAXOUT scheduler wont always open the specified number of max connections.
  
 ALL
  ALL operates within the boundaries of --max-parallel-downloads. ALL scheduler has no logic, it divides the --max-parallel-downloads among the network-interfaces, 
  and new connection is triggered on the interface when the connection_count falls below the precomputed max_value.
 
NOTE
 For binding to a network-interface, MID uses SO_BINDTODEVICE socket-option. This generally requires elevated (super user) permissions and CAP_NET_RAW capability.
 So super user check is performed when application is invoked. If the program is not invoked as super user, it terminates printing the mentioned note. 
 If you beleive you have sufficient permissions, then pass {--surpass-root-check | -s} argument to surpass the super user check.
 But note that the program wont complain, it just hangs and terminates after sometime (after --max-tcp-syn-retransmits). 

RETURN VALUE
 The program returns 0 when the download was successful. 1 if error occured before the download was started. 2 if the download started and was interuptted.
 3 if there was a fatal error because of the lack of library support. 4 unexpected behaviors, might or might not be an error. 

EXAMPLES
 The trivial file download is performed as follows:
 	
 	# {MID | mid} --url http://cdimage.kali.org/kali-2019.2/kali-linux-2019.2-amd64.iso

 The {--detailed-progress | -Pd} argument can be used to make MID display the detailed stats
 	
 	# {MID | mid} --url http://cdimage.kali.org/kali-2019.2/kali-linux-2019.2-amd64.iso -Pd

 The {--include-interfaces | -i} and {--exclude-interfaces | -ni} can be configured to limit MID to use particular network-interfaces in the file download.
 Both options can be configured together and MID performs include-interfaces - exclude-interfaces to determine the interfaces which are used in the download
 	
 	# {MID | mid} --url http://cdimage.kali.org/kali-2019.2/kali-linux-2019.2-amd64.iso -ni lo
 	
	(Loopback interface is excluded and all other interfaces are used in the download)
	
	# {MID | mid} --url http://cdimage.kali.org/kali-2019.2/kali-linux-2019.2-amd64.iso -i eth0,wlan0
	
	(Only eth0,wlan0 are used in the file download)
	
	# {MID | mid} --url http://cdimage.kali.org/kali-2019.2/kali-linux-2019.2-amd64.iso -ni eth1 -i eth0,eth1
	
	(Only eth0 is used in the file download)
	
FILES
 /usr/local/etc/MID.conf - System-wide configuration file.
 
 Use MID.conf file to make the settings persistent. The oder of preferefernce is command_line > conf_file > default_values

COPYRIGHT
 MID was originally written by Mohith Reddy. Please, see the AUTHORS and ChangeLog files.

 The project homepage is { https://github.com/m0hithreddy/MID }
